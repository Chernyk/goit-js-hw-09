{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAwB/B,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA9BPN,EAAKC,KAAKa,iBAAiB,UAC3B,SAAkBC,GAChBA,EAAEC,iBAMF,IALA,IAEMC,GAAYjB,EAAKC,KAAY,MAAEiB,MAC/BC,GAAWnB,EAAKC,KAAW,KAAEiB,MAC7BE,GAAapB,EAAKC,KAAa,OAAEiB,MAC9BG,EAAI,EAAGA,EAAID,EAAWC,IAG7BjB,EAFWiB,EAAI,EACPF,EAAUE,EAAIJ,GAEnBK,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBR,EAAA0B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE9DqB,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBR,EAAA0B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\nfunction onSubmit(e) {\n  e.preventDefault();\n  let position = 0;\n  let delay = 0;\n  const getDelay = +refs.form['delay'].value;\n  const getStep = +refs.form['step'].value;\n  const getAmount = +refs.form['amount'].value;\n  for (let i = 0; i < getAmount; i++) {\n    position = i + 1;\n    delay = getStep * i + getDelay;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((Fulfill, Reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        Fulfill({ position, delay });\n      } else {\n        Reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","Fulfill","Reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","getDelay","value","getStep","getAmount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e48c7ef6.js.map"}