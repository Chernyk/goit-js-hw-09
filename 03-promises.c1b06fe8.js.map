{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASG,kBAAkB,SACvCC,UAAWJ,SAASG,kBAAkB,QACtCE,YAAaL,SAASG,kBAAkB,UACxCG,OAAQN,SAASC,cAAc,iBAwBjC,SAASM,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/BbX,EAAKQ,OAAOW,iBAAiB,SAC7B,SAAiBC,GACfA,EAAEC,iBACF,IAAIC,EAAW,EACXC,EAAQ,EACZ,MAAMC,EAAWC,OAAOzB,EAAKI,WAAW,GAAGsB,OACrCC,EAAUF,OAAOzB,EAAKM,UAAU,GAAGoB,OACnCE,EAAYH,OAAOzB,EAAKO,YAAY,GAAGmB,OAE7C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAWC,IAC7BP,EAAWO,EAAI,EACfN,EAAQI,EAAUE,EAAIL,EACtBf,EAAca,EAAUC,GACrBO,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBb,EAAAiC,OAAOC,QAAQ,uBAAqBtB,QAAiBC,MAAU,IAEhEsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBb,EAAAiC,OAAOG,QAAQ,sBAAoBxB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.getElementsByName('delay'),\n  stepInput: document.getElementsByName('step'),\n  amountInput: document.getElementsByName('amount'),\n  button: document.querySelector('.form>button'),\n};\nrefs.button.addEventListener('click', onClick);\nfunction onClick(e) {\n  e.preventDefault();\n  let position = 0;\n  let delay = 0;\n  const getDelay = Number(refs.delayInput[0].value);\n  const getStep = Number(refs.stepInput[0].value);\n  const getAmount = Number(refs.amountInput[0].value);\n\n  for (let i = 0; i < getAmount; i++) {\n    position = i + 1;\n    delay = getStep * i + getDelay;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((Fulfill, Reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        Fulfill({ position, delay });\n      } else {\n        Reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayInput","getElementsByName","stepInput","amountInput","button","$47d4ff9957288465$var$createPromise","position","delay","Promise","Fulfill","Reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","position1","delay1","getDelay","Number","value","getStep","getAmount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.c1b06fe8.js.map"}